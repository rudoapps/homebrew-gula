#!/bin/bash

ANDROID_PROJECT_SRC="app/src/main/java"
GULA_PACKAGE="app.gula.com"
MODULES_PATH="modules"

list_android() {
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}Prerequisitos: Validando.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"

  # Log operaci√≥n de listado
  log_operation "list" "android" "modules" "${BRANCH:-main}" "started"

  get_access_token $KEY "android"
  
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP1 - Clonaci√≥n temporal del proyecto de GULA.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"

  if [ -n "${BRANCH:-}" ]; then
    echo -e "üåø Usando rama: ${YELLOW}$BRANCH${NC}"
    git clone --branch "$BRANCH" "https://x-token-auth:$ACCESSTOKEN@bitbucket.org/rudoapps/gula-android.git" "$TEMPORARY_DIR"
  else
    git clone "https://x-token-auth:$ACCESSTOKEN@bitbucket.org/rudoapps/gula-android.git" "$TEMPORARY_DIR"
  fi
  echo ""
  echo -e "${BOLD}Lista de m√≥dulos disponibles:"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  standardized_list_modules "" "app" "gradle" "shared"
  echo -e "${BOLD}-----------------------------------------------${NC}"

  # Log √©xito del listado
  log_operation "list" "android" "modules" "${BRANCH:-main}" "success"

  remove_temporary_dir
}

install_android_module() {
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}Prerequisitos: Validando.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"

  # Verificar si el m√≥dulo ya est√° instalado
  local is_reinstall=false
  if is_module_installed "android" "$MODULE_NAME"; then
    if ! handle_module_reinstallation "android" "$MODULE_NAME" "${BRANCH:-main}"; then
      exit 0  # Usuario cancel√≥ la instalaci√≥n
    fi
    is_reinstall=true
  else
    # Log inicio de operaci√≥n (solo para nuevas instalaciones)
    log_operation "install" "android" "$MODULE_NAME" "${BRANCH:-main}" "started"
  fi

  # Variable para controlar si la instalaci√≥n fue exitosa
  local installation_success=false

  # Funci√≥n para manejar errores durante la instalaci√≥n
  handle_installation_error() {
    # Solo registrar error si la instalaci√≥n no fue marcada como exitosa
    if [ "$installation_success" = false ]; then
      echo -e "${RED}‚ùå Error durante la instalaci√≥n del m√≥dulo Android${NC}"
      if [ "$is_reinstall" = true ]; then
        log_operation "reinstall" "android" "$MODULE_NAME" "${BRANCH:-main}" "error" "Instalaci√≥n interrumpida o fall√≥"
      else
        log_operation "install" "android" "$MODULE_NAME" "${BRANCH:-main}" "error" "Instalaci√≥n interrumpida o fall√≥"
      fi
      remove_temporary_dir
    fi
  }

  # Configurar trap para capturar errores y interrupciones
  trap handle_installation_error ERR EXIT

  get_access_token $KEY "android"
  
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP1 - Clonaci√≥n temporal del proyecto de GULA.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  
  if [ -n "${BRANCH:-}" ]; then
    echo -e "üåø Usando rama: ${YELLOW}$BRANCH${NC}"
    git clone --branch "$BRANCH" "https://x-token-auth:$ACCESSTOKEN@bitbucket.org/rudoapps/gula-android.git" "$TEMPORARY_DIR"
  else
    git clone "https://x-token-auth:$ACCESSTOKEN@bitbucket.org/rudoapps/gula-android.git" "$TEMPORARY_DIR"
  fi

  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP2 - Localizar package name del proyecto.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  
  android_detect_package_name 

  # Verificar que el m√≥dulo existe en el repositorio clonado
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP3 - Verificaci√≥n de la existencia del m√≥dulo: ${MODULE_NAME}.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  android_check_module_in_temporary_dir $MODULE_NAME

  # Verificar si el m√≥dulo ya est√° instalado en el proyecto destino
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP4 - Verificaci√≥n instalaci√≥n previa del m√≥dulo: ${MODULE_NAME}.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  android_verify_module $MODULE_NAME
  
  # Verificar si la carpeta 'modules' existe; si no, crearla
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP5 - Verificaci√≥n existencia carpeta: ${MODULE_NAME}.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  android_create_modules_dir

  # Copiar el m√≥dulo al proyecto destino
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP6 - Copiar ficheros al proyecto.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${YELLOW}Inicio copiado de del m√≥dulo ${TEMPORARY_DIR}/${MODULE_NAME} en: ${MODULE_NAME}${NC}"
  copy_files "${TEMPORARY_DIR}/${MODULE_NAME}" "."

   # Renombrar los imports en los archivos .java y .kt del m√≥dulo copiado
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP7 - Renombrar imports.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  # android_rename_imports

  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP8 - Instalar dependencias principales.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  android_install_main_dependencies

  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP9 - Copiar/instalar las dependencias.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  android_install_libraries_dependencies "$TEMPORARY_DIR/${MODULE_NAME}/configuration.gula"
  android_install_gradle_dependencies "$TEMPORARY_DIR/${MODULE_NAME}/configuration.gula"
  android_install_modules_dependencies

  echo -e "${GREEN}-----------------------------------------------${NC}"
  echo -e "${GREEN}Proceso finalizado.${NC}"
  echo -e "${GREEN}-----------------------------------------------${NC}"
  
  # Marcar instalaci√≥n como exitosa antes de la limpieza
  installation_success=true
  
  # Log √©xito de instalaci√≥n
  if [ "$is_reinstall" = true ]; then
    log_operation "reinstall" "android" "$MODULE_NAME" "${BRANCH:-main}" "success"
  else
    log_operation "install" "android" "$MODULE_NAME" "${BRANCH:-main}" "success"
  fi
  log_installed_module "android" "$MODULE_NAME" "${BRANCH:-main}"
  
  # Remover trap de error ya que la instalaci√≥n fue exitosa
  trap - ERR EXIT
  
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}STEP10 - Eliminaci√≥n repositorio temporal.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  remove_temporary_dir
}

install_templates_android() {
  echo -e "${BOLD}-----------------------------------------------${NC}"
  echo -e "${BOLD}Iniciando instalaci√≥n de templates Android.${NC}"
  echo -e "${BOLD}-----------------------------------------------${NC}"
  
  # Log inicio de generaci√≥n de template
  log_operation "template" "android" "$MODULE_NAME" "local" "started"
  
  android_install_all_templates "$MODULE_NAME"

  if [ $? -eq 0 ]; then
    echo -e "‚úÖ El template '$MODULE_NAME' fue generado correctamente."
    # Log √©xito de generaci√≥n de template
    log_operation "template" "android" "$MODULE_NAME" "local" "success"
  else
    echo -e "${RED}Error: Algo sali√≥ mal al ejecutar ${NC}"
    # Log error de generaci√≥n de template
    log_operation "template" "android" "$MODULE_NAME" "local" "error" "Error durante la generaci√≥n del template"
    exit 1
  fi
}