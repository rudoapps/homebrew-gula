import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.fragment.app.viewModels
import androidx.lifecycle.lifecycleScope
import dagger.hilt.android.AndroidEntryPoint
import kotlinx.coroutines.launch

@AndroidEntryPoint
class {{TEMPLATE_NAME}}View : Fragment() {
    
    private var _binding: Fragment{{TEMPLATE_NAME}}Binding? = null
    private val binding get() = _binding!!
    
    private val viewModel: {{TEMPLATE_NAME}}ViewModel by viewModels()
    
    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = Fragment{{TEMPLATE_NAME}}Binding.inflate(inflater, container, false)
        return binding.root
    }
    
    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        observeUiState()
        
        // Load all {{PARAM_NAME}}s
        viewModel.getAll{{TEMPLATE_NAME}}s()
    }
    
    private fun observeUiState() {
        lifecycleScope.launch {
            viewModel.uiState.collect { state ->
                if (state.isLoading) {
                    binding.progressBar.visibility = View.VISIBLE
                } else {
                    binding.progressBar.visibility = View.GONE
                }
                
                if (state.{{PARAM_NAME}}s.isNotEmpty()) {
                    // Display first {{PARAM_NAME}} as example or setup RecyclerView
                    binding.nameText.text = state.{{PARAM_NAME}}s.first().name
                }
                
                state.error?.let { error ->
                    // Show error message
                }
            }
        }
    }
    
    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}